name: Convert Python to Jupyter Notebook and Update README

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  convert-and-update:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nbformat

    - name: Run JINC conversion and handle changes
      run: |
        # Get list of changed Python files
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.py$' || true)
        
        # Convert changed Python files to notebooks
        for py_file in $CHANGED_FILES; do
          if [[ "$py_file" == *"jinc.py"* ]] || [[ "$py_file" == *"generate_readme.py"* ]]; then
            echo "Skipping $py_file"
            continue
          fi
          
          ipynb_file="${py_file%.py}.ipynb"
          echo "Converting $py_file to $ipynb_file"
          python jinc.py "$py_file" -o "$ipynb_file"
        done

        # Convert any new Python files to notebooks
        for py_file in $(find . -name "*.py" -not -path "*/.*"); do
          if [[ "$py_file" == *"jinc.py"* ]] || [[ "$py_file" == *"generate_readme.py"* ]]; then
            continue
          fi
          
          ipynb_file="${py_file%.py}.ipynb"
          if [ ! -f "$ipynb_file" ]; then
            echo "Converting new file $py_file to $ipynb_file"
            python jinc.py "$py_file" -o "$ipynb_file"
          fi
        done

        # Delete orphaned notebooks
        for ipynb_file in $(find . -name "*.ipynb" -not -path "*/.*"); do
          py_file="${ipynb_file%.ipynb}.py"
          if [ ! -f "$py_file" ]; then
            echo "Deleting orphaned notebook: $ipynb_file"
            git rm "$ipynb_file"
          fi
        done

    - name: Generate README
      run: |
        python generate_readme.py
        if [ ! -f README.md ]; then
          echo "README.md was not generated. Exiting."
          exit 1
        fi
        echo "README.md generated successfully. Content:"
        cat README.md

    - name: Commit and push if changed
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github-actions@github.com'
        git add -A
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update Jupyter notebooks and README"
          git push
        fi